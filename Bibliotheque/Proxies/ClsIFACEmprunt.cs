//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18444
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bibliotheque.Proxies
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="COUCHEIFAC/ClsIFACEmprunt", ConfigurationName="Bibliotheque.Proxies.ClsIFACEmprunt")]
    public interface ClsIFACEmprunt
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectAllEmprunt", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectAllEmpruntResponse")]
        System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> SelectAllEmprunt();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectAllEmprunt", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectAllEmpruntResponse")]
        System.IAsyncResult BeginSelectAllEmprunt(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> EndSelectAllEmprunt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectEmpruntEnCoursByUtilisateur", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectEmpruntEnCoursByUtilisateurRespons" +
            "e")]
        System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> SelectEmpruntEnCoursByUtilisateur(int Lecteur_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectEmpruntEnCoursByUtilisateur", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectEmpruntEnCoursByUtilisateurRespons" +
            "e")]
        System.IAsyncResult BeginSelectEmpruntEnCoursByUtilisateur(int Lecteur_ID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> EndSelectEmpruntEnCoursByUtilisateur(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectAllEmpruntEnCours", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectAllEmpruntEnCoursResponse")]
        System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> SelectAllEmpruntEnCours();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectAllEmpruntEnCours", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectAllEmpruntEnCoursResponse")]
        System.IAsyncResult BeginSelectAllEmpruntEnCours(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> EndSelectAllEmpruntEnCours(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectEmpruntHistoriqueByUtilisateur", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectEmpruntHistoriqueByUtilisateurResp" +
            "onse")]
        System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> SelectEmpruntHistoriqueByUtilisateur(int Lecteur_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectEmpruntHistoriqueByUtilisateur", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectEmpruntHistoriqueByUtilisateurResp" +
            "onse")]
        System.IAsyncResult BeginSelectEmpruntHistoriqueByUtilisateur(int Lecteur_ID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> EndSelectEmpruntHistoriqueByUtilisateur(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/Emprunter", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/EmprunterResponse")]
        COUCHEBO.ClsBOEmprunt Emprunter(int Lecteur_ID, int Exemplaire_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/Emprunter", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/EmprunterResponse")]
        System.IAsyncResult BeginEmprunter(int Lecteur_ID, int Exemplaire_ID, System.AsyncCallback callback, object asyncState);
        
        COUCHEBO.ClsBOEmprunt EndEmprunter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/EmpruntRetour", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/EmpruntRetourResponse")]
        COUCHEBO.ClsBOEmprunt EmpruntRetour(int Emprunt_ID, int Exemplaire_ID, int Lecteur_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/EmpruntRetour", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/EmpruntRetourResponse")]
        System.IAsyncResult BeginEmpruntRetour(int Emprunt_ID, int Exemplaire_ID, int Lecteur_ID, System.AsyncCallback callback, object asyncState);
        
        COUCHEBO.ClsBOEmprunt EndEmpruntRetour(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/EmpruntRetourAdmin", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/EmpruntRetourAdminResponse")]
        COUCHEBO.ClsBOEmprunt EmpruntRetourAdmin(int Emprunt_ID, int Exemplaire_ID, int Lecteur_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/EmpruntRetourAdmin", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/EmpruntRetourAdminResponse")]
        System.IAsyncResult BeginEmpruntRetourAdmin(int Emprunt_ID, int Exemplaire_ID, int Lecteur_ID, System.AsyncCallback callback, object asyncState);
        
        COUCHEBO.ClsBOEmprunt EndEmpruntRetourAdmin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectPrixByLecteur", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectPrixByLecteurResponse")]
        COUCHEBO.ClsBOEmprunt SelectPrixByLecteur(int Lecteur_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectPrixByLecteur", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectPrixByLecteurResponse")]
        System.IAsyncResult BeginSelectPrixByLecteur(int Lecteur_ID, System.AsyncCallback callback, object asyncState);
        
        COUCHEBO.ClsBOEmprunt EndSelectPrixByLecteur(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectPrixByBiblio", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectPrixByBiblioResponse")]
        COUCHEBO.ClsBOEmprunt SelectPrixByBiblio(int Biblio_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectPrixByBiblio", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/SelectPrixByBiblioResponse")]
        System.IAsyncResult BeginSelectPrixByBiblio(int Biblio_ID, System.AsyncCallback callback, object asyncState);
        
        COUCHEBO.ClsBOEmprunt EndSelectPrixByBiblio(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/CountNbrExemplaireByISBN", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/CountNbrExemplaireByISBNResponse")]
        System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> CountNbrExemplaireByISBN(string ISBN);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/CountNbrExemplaireByISBN", ReplyAction="COUCHEIFAC/ClsIFACEmprunt/ClsIFACEmprunt/CountNbrExemplaireByISBNResponse")]
        System.IAsyncResult BeginCountNbrExemplaireByISBN(string ISBN, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> EndCountNbrExemplaireByISBN(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ClsIFACEmpruntChannel : Bibliotheque.Proxies.ClsIFACEmprunt, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClsIFACEmpruntClient : System.ServiceModel.ClientBase<Bibliotheque.Proxies.ClsIFACEmprunt>, Bibliotheque.Proxies.ClsIFACEmprunt
    {
        
        public ClsIFACEmpruntClient()
        {
        }
        
        public ClsIFACEmpruntClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ClsIFACEmpruntClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ClsIFACEmpruntClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ClsIFACEmpruntClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> SelectAllEmprunt()
        {
            return base.Channel.SelectAllEmprunt();
        }
        
        public System.IAsyncResult BeginSelectAllEmprunt(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSelectAllEmprunt(callback, asyncState);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> EndSelectAllEmprunt(System.IAsyncResult result)
        {
            return base.Channel.EndSelectAllEmprunt(result);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> SelectEmpruntEnCoursByUtilisateur(int Lecteur_ID)
        {
            return base.Channel.SelectEmpruntEnCoursByUtilisateur(Lecteur_ID);
        }
        
        public System.IAsyncResult BeginSelectEmpruntEnCoursByUtilisateur(int Lecteur_ID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSelectEmpruntEnCoursByUtilisateur(Lecteur_ID, callback, asyncState);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> EndSelectEmpruntEnCoursByUtilisateur(System.IAsyncResult result)
        {
            return base.Channel.EndSelectEmpruntEnCoursByUtilisateur(result);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> SelectAllEmpruntEnCours()
        {
            return base.Channel.SelectAllEmpruntEnCours();
        }
        
        public System.IAsyncResult BeginSelectAllEmpruntEnCours(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSelectAllEmpruntEnCours(callback, asyncState);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> EndSelectAllEmpruntEnCours(System.IAsyncResult result)
        {
            return base.Channel.EndSelectAllEmpruntEnCours(result);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> SelectEmpruntHistoriqueByUtilisateur(int Lecteur_ID)
        {
            return base.Channel.SelectEmpruntHistoriqueByUtilisateur(Lecteur_ID);
        }
        
        public System.IAsyncResult BeginSelectEmpruntHistoriqueByUtilisateur(int Lecteur_ID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSelectEmpruntHistoriqueByUtilisateur(Lecteur_ID, callback, asyncState);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> EndSelectEmpruntHistoriqueByUtilisateur(System.IAsyncResult result)
        {
            return base.Channel.EndSelectEmpruntHistoriqueByUtilisateur(result);
        }
        
        public COUCHEBO.ClsBOEmprunt Emprunter(int Lecteur_ID, int Exemplaire_ID)
        {
            return base.Channel.Emprunter(Lecteur_ID, Exemplaire_ID);
        }
        
        public System.IAsyncResult BeginEmprunter(int Lecteur_ID, int Exemplaire_ID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginEmprunter(Lecteur_ID, Exemplaire_ID, callback, asyncState);
        }
        
        public COUCHEBO.ClsBOEmprunt EndEmprunter(System.IAsyncResult result)
        {
            return base.Channel.EndEmprunter(result);
        }
        
        public COUCHEBO.ClsBOEmprunt EmpruntRetour(int Emprunt_ID, int Exemplaire_ID, int Lecteur_ID)
        {
            return base.Channel.EmpruntRetour(Emprunt_ID, Exemplaire_ID, Lecteur_ID);
        }
        
        public System.IAsyncResult BeginEmpruntRetour(int Emprunt_ID, int Exemplaire_ID, int Lecteur_ID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginEmpruntRetour(Emprunt_ID, Exemplaire_ID, Lecteur_ID, callback, asyncState);
        }
        
        public COUCHEBO.ClsBOEmprunt EndEmpruntRetour(System.IAsyncResult result)
        {
            return base.Channel.EndEmpruntRetour(result);
        }
        
        public COUCHEBO.ClsBOEmprunt EmpruntRetourAdmin(int Emprunt_ID, int Exemplaire_ID, int Lecteur_ID)
        {
            return base.Channel.EmpruntRetourAdmin(Emprunt_ID, Exemplaire_ID, Lecteur_ID);
        }
        
        public System.IAsyncResult BeginEmpruntRetourAdmin(int Emprunt_ID, int Exemplaire_ID, int Lecteur_ID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginEmpruntRetourAdmin(Emprunt_ID, Exemplaire_ID, Lecteur_ID, callback, asyncState);
        }
        
        public COUCHEBO.ClsBOEmprunt EndEmpruntRetourAdmin(System.IAsyncResult result)
        {
            return base.Channel.EndEmpruntRetourAdmin(result);
        }
        
        public COUCHEBO.ClsBOEmprunt SelectPrixByLecteur(int Lecteur_ID)
        {
            return base.Channel.SelectPrixByLecteur(Lecteur_ID);
        }
        
        public System.IAsyncResult BeginSelectPrixByLecteur(int Lecteur_ID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSelectPrixByLecteur(Lecteur_ID, callback, asyncState);
        }
        
        public COUCHEBO.ClsBOEmprunt EndSelectPrixByLecteur(System.IAsyncResult result)
        {
            return base.Channel.EndSelectPrixByLecteur(result);
        }
        
        public COUCHEBO.ClsBOEmprunt SelectPrixByBiblio(int Biblio_ID)
        {
            return base.Channel.SelectPrixByBiblio(Biblio_ID);
        }
        
        public System.IAsyncResult BeginSelectPrixByBiblio(int Biblio_ID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSelectPrixByBiblio(Biblio_ID, callback, asyncState);
        }
        
        public COUCHEBO.ClsBOEmprunt EndSelectPrixByBiblio(System.IAsyncResult result)
        {
            return base.Channel.EndSelectPrixByBiblio(result);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> CountNbrExemplaireByISBN(string ISBN)
        {
            return base.Channel.CountNbrExemplaireByISBN(ISBN);
        }
        
        public System.IAsyncResult BeginCountNbrExemplaireByISBN(string ISBN, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginCountNbrExemplaireByISBN(ISBN, callback, asyncState);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOEmprunt> EndCountNbrExemplaireByISBN(System.IAsyncResult result)
        {
            return base.Channel.EndCountNbrExemplaireByISBN(result);
        }
    }
}
