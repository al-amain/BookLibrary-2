//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18444
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bibliotheque.Proxies
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="COUCHEIFAC/ClsIFACExemp", ConfigurationName="Bibliotheque.Proxies.ClsIFACExemp")]
    public interface ClsIFACExemp
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectAllExemp", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectAllExempResponse")]
        System.Collections.Generic.List<COUCHEBO.ClsBOExemp> SelectAllExemp();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectAllExemp", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectAllExempResponse")]
        System.IAsyncResult BeginSelectAllExemp(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<COUCHEBO.ClsBOExemp> EndSelectAllExemp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByBiblioID", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByBiblioIDResponse")]
        System.Collections.Generic.List<COUCHEBO.ClsBOExemp> SelectExempByBiblioID(int Biblio_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByBiblioID", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByBiblioIDResponse")]
        System.IAsyncResult BeginSelectExempByBiblioID(int Biblio_ID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<COUCHEBO.ClsBOExemp> EndSelectExempByBiblioID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByISBN", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByISBNResponse")]
        System.Collections.Generic.List<COUCHEBO.ClsBOExemp> SelectExempByISBN(string ISBN);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByISBN", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByISBNResponse")]
        System.IAsyncResult BeginSelectExempByISBN(string ISBN, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<COUCHEBO.ClsBOExemp> EndSelectExempByISBN(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByEtat", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByEtatResponse")]
        System.Collections.Generic.List<COUCHEBO.ClsBOExemp> SelectExempByEtat(int Etat_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByEtat", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByEtatResponse")]
        System.IAsyncResult BeginSelectExempByEtat(int Etat_ID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<COUCHEBO.ClsBOExemp> EndSelectExempByEtat(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByISBNAndBiblioID", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByISBNAndBiblioIDResponse")]
        System.Collections.Generic.List<COUCHEBO.ClsBOExemp> SelectExempByISBNAndBiblioID(string ISBN, int Biblio_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByISBNAndBiblioID", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectExempByISBNAndBiblioIDResponse")]
        System.IAsyncResult BeginSelectExempByISBNAndBiblioID(string ISBN, int Biblio_ID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<COUCHEBO.ClsBOExemp> EndSelectExempByISBNAndBiblioID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/AddExemplaire", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/AddExemplaireResponse")]
        COUCHEBO.ClsBOExemp AddExemplaire(string ISBN, int Biblio_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/AddExemplaire", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/AddExemplaireResponse")]
        System.IAsyncResult BeginAddExemplaire(string ISBN, int Biblio_ID, System.AsyncCallback callback, object asyncState);
        
        COUCHEBO.ClsBOExemp EndAddExemplaire(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectEtatByExempID", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectEtatByExempIDResponse")]
        COUCHEBO.ClsBOExemp SelectEtatByExempID(int Exemp_ID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectEtatByExempID", ReplyAction="COUCHEIFAC/ClsIFACExemp/ClsIFACExemp/SelectEtatByExempIDResponse")]
        System.IAsyncResult BeginSelectEtatByExempID(int Exemp_ID, System.AsyncCallback callback, object asyncState);
        
        COUCHEBO.ClsBOExemp EndSelectEtatByExempID(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ClsIFACExempChannel : Bibliotheque.Proxies.ClsIFACExemp, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClsIFACExempClient : System.ServiceModel.ClientBase<Bibliotheque.Proxies.ClsIFACExemp>, Bibliotheque.Proxies.ClsIFACExemp
    {
        
        public ClsIFACExempClient()
        {
        }
        
        public ClsIFACExempClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ClsIFACExempClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ClsIFACExempClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ClsIFACExempClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOExemp> SelectAllExemp()
        {
            return base.Channel.SelectAllExemp();
        }
        
        public System.IAsyncResult BeginSelectAllExemp(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSelectAllExemp(callback, asyncState);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOExemp> EndSelectAllExemp(System.IAsyncResult result)
        {
            return base.Channel.EndSelectAllExemp(result);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOExemp> SelectExempByBiblioID(int Biblio_ID)
        {
            return base.Channel.SelectExempByBiblioID(Biblio_ID);
        }
        
        public System.IAsyncResult BeginSelectExempByBiblioID(int Biblio_ID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSelectExempByBiblioID(Biblio_ID, callback, asyncState);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOExemp> EndSelectExempByBiblioID(System.IAsyncResult result)
        {
            return base.Channel.EndSelectExempByBiblioID(result);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOExemp> SelectExempByISBN(string ISBN)
        {
            return base.Channel.SelectExempByISBN(ISBN);
        }
        
        public System.IAsyncResult BeginSelectExempByISBN(string ISBN, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSelectExempByISBN(ISBN, callback, asyncState);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOExemp> EndSelectExempByISBN(System.IAsyncResult result)
        {
            return base.Channel.EndSelectExempByISBN(result);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOExemp> SelectExempByEtat(int Etat_ID)
        {
            return base.Channel.SelectExempByEtat(Etat_ID);
        }
        
        public System.IAsyncResult BeginSelectExempByEtat(int Etat_ID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSelectExempByEtat(Etat_ID, callback, asyncState);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOExemp> EndSelectExempByEtat(System.IAsyncResult result)
        {
            return base.Channel.EndSelectExempByEtat(result);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOExemp> SelectExempByISBNAndBiblioID(string ISBN, int Biblio_ID)
        {
            return base.Channel.SelectExempByISBNAndBiblioID(ISBN, Biblio_ID);
        }
        
        public System.IAsyncResult BeginSelectExempByISBNAndBiblioID(string ISBN, int Biblio_ID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSelectExempByISBNAndBiblioID(ISBN, Biblio_ID, callback, asyncState);
        }
        
        public System.Collections.Generic.List<COUCHEBO.ClsBOExemp> EndSelectExempByISBNAndBiblioID(System.IAsyncResult result)
        {
            return base.Channel.EndSelectExempByISBNAndBiblioID(result);
        }
        
        public COUCHEBO.ClsBOExemp AddExemplaire(string ISBN, int Biblio_ID)
        {
            return base.Channel.AddExemplaire(ISBN, Biblio_ID);
        }
        
        public System.IAsyncResult BeginAddExemplaire(string ISBN, int Biblio_ID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginAddExemplaire(ISBN, Biblio_ID, callback, asyncState);
        }
        
        public COUCHEBO.ClsBOExemp EndAddExemplaire(System.IAsyncResult result)
        {
            return base.Channel.EndAddExemplaire(result);
        }
        
        public COUCHEBO.ClsBOExemp SelectEtatByExempID(int Exemp_ID)
        {
            return base.Channel.SelectEtatByExempID(Exemp_ID);
        }
        
        public System.IAsyncResult BeginSelectEtatByExempID(int Exemp_ID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSelectEtatByExempID(Exemp_ID, callback, asyncState);
        }
        
        public COUCHEBO.ClsBOExemp EndSelectEtatByExempID(System.IAsyncResult result)
        {
            return base.Channel.EndSelectEtatByExempID(result);
        }
    }
}
